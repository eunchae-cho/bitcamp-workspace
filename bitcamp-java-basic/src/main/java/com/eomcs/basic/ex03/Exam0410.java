package com.eomcs.basic.ex03;


// 문자 리터럴
public class Exam0410 {
    public static void main(String[] args) {
      // 자바는 문자를 메모리에 저장할 때 Unicode규칙에 따라
      // 2바이트 코드로 저장한다.
      // => 'A' : 0x0041
      // => 'B' : 0x0042
      // => '1' : 0x0031
      // => '가' : 0xac00
      
        
        System.out.println('A');
        System.out.println('가');
        System.out.println('\u0041');  //유니코드 값 넣음
        System.out.println('\u4eba');
        
        
        // 숫자를 치면 일반 숫자로 인식한다.
        System.out.println(0x41);
        System.out.println(65);
      
    }
}

// 문자를 메모리에 저장하려면 2진수로 바꿀 수 있어야 한다.
// 문자를 2진수로 바꾸는 규칙을 "문자집합(Character Set)"이라 한다.
// 문자 집합에는 여러 규칙이 있다.

// ASCII(American Standard Code for Information Interchange) - 7bit
//  - 영어, 대소문자, 숫자, 특수문자 등
//  - 'A' => 100_0001 = 0x41
//  - 'B' => 100_0010 = 0x42
//  - '1' => 011_0002 = 0x31
//  - '2' => 011_0002 = 0x32
//  - 한글(11172자)는 정의되어 있지 않다.

// ISO-8859-1 - 8bit
// 1비트가 더 추가되면서 서유럽의 특수 언어 표시가 추가됨
// ASCII + 유럽 문자

// EUC-KR(KSC-5601) - 16bit
//  - '가' => 10110000_10100001 = 0xb0a1
//  - '각' => 10110000_10100010 = 0xb0a2
// 현대 통용되는 한글 음절 11172자를 모두 표현할 수 없다.

// Unicode(ISO/IEC 10646) - 16bit
// 영어 한글 모두 2바이트로 표현
// 대부분의 국가의 문자를 담고 있다.
//  - 'A' => 0x0041
//  - 'B' => 0x0042
//  - '1' => 0x0031
//  - '2' => 0x0032
//  - '가' => 0xac00
//  - '나' => 0xac01
// 영어를 2바이트로 표현하기 때문에 비효율적이다.
// 한글은 새로 정의했기 때문에 EUC-KR과 호환되지 않는다.

// UTF-8 - 8 ~ 32bit
// Universal Coded Character Set + Transformation Format – 8-bit 의 약자
// Unicode의 국제 문자세트
// Unicode에 있는 문자를 규칙에 따라 1에서 4바이트로 변환한다.
// ISO-8859-1(영어, 숫자, 특수문자) : 1바이트로 표현한다.
//  - 'A' => 0x41
//  - 'B' => 0x42
//  - '1' => 0x31
// 한글 : 3바이트로 표현한다.
//  - '가' => 0xac00(10101100_00000000,Unicode)
//                  => 1110xxxx 10xxxxxx 10xxxxxx (변환규칙)
//                  => 11101010 10110000 1000000 (규칙에 따라 적용)
//                  => 0xEAB080 (UTF-8)
// 문자에 따라 바이트 크기가 달라진다.
// 기존의 ISO-8859-1은 1바이트로 표현한다.
// 한글은 규칙에 따라 3바이트로 변환한다.


// 원래 영어권 나라에서는 영어를 1바이트로 표현해 저장함 
// 그리고 원래 8바이트로 저장했던 문자는 그대로 유지
// 한국어나 중국어등 다른 특별한 문자를 쓰기에 마땅치 않음
// 영어 숫자 한글 모두 2바이트로 나타낸 유니코드를 개발함
// 영어권 나라애들이 1바이트로 쓴 걸 2바이트로 나타내려고 하자니 불만임
// 그럼 그대로 영어를 1바이트로 유지 한글은 3바이트로 나타낸 UTF-8이 
// 유니코드로부터 약간 변형하여 나옴


