<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- SQL문 목록
    namespace 속성 : SQL문을 가리킬 때 사용하는 그룹명 
        보통 SQL을 사용하는 객체 이름으로 설정
        즉 DAO 인터페이스 또는 클래스명으로 설정
        그래야 유지보수할 때 DAO와 연결된 SQL문을 바로 찾을 수 있다. -->
<mapper namespace="BoardDao">

  <!-- 컬럼의 값을 어떤 자바 객체에 담을 것인지 정의 
   type 속성 : 자바 클래스명
   id 속성 : 컬럼-프로퍼티 연결 정보를 가리킬 이름
            SQL문 정의할 때 사용-->
  <resultMap type="com.eomcs.pms.domain.Board" id="BoardMap">
    <id column="no" property="no"/>
    <result column="title" property="title"/>
    <result column="cdt" property="registeredDate"/>
    <result column="vw_cnt" property="viewCount"/>
    
    <association property="writer" javaType="com.eomcs.pms.domain.Member">
      <id column="wrter_no" property="no"/>
      <result column="name" property="name"/>
    </association>
    </resultMap>
   

    
  <!-- select 태그
    select SQL문을 정의하는 태그
    id 속성 : mybatis에서 SQL을 찾을 때 사용할 이름, 보통 사용하는 메소드 이름으로 설정
    resultType 속성 : select 결과물에서 한 개의 레코드 값을 담을 자바 도메인 클래스 객체 이름
    select의 결과가 여러 개라면 해당 도메인 객체도 여러개가 생성될 것
         이렇게 여러 개 생성된 도메인 객체는 List 컬렉션 객체에 저장
    List 컬렉션 객체가 최종적으로 리턴-->
  <select id="findAll" resultMap="BoardMap">
    select 
      b.no, 
      b.title, 
      b.cdt as registeredDate,
      b.vw_cnt as viewCount, 
      m.no writer_no, 
      m.name
    from 
      pms_board b 
      inner join pms_member m on b.writer=m.no
    order by 
      b.no desc
  </select>
  
  <insert id="insert" parameterType="com.eomcs.pms.domain.Board">
  insert into pms_board(title,content,writer)
  values(#{title},#{content},#{writer.no})
  </insert>
 </mapper>